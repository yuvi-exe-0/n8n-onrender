services:
  - type: web
    name: n8n
    env: docker
    plan: free
    dockerfilePath: ""
    autoDeploy: true
    envVars:
      # === Auth and Web UI ===
      - key: N8N_BASIC_AUTH_ACTIVE
        value: "true"
      - key: N8N_BASIC_AUTH_USER
        value: admin
      - key: N8N_BASIC_AUTH_PASSWORD
        sync: false  # Set manually in Render dashboard

      # === External URL ===
      - key: WEBHOOK_URL
        value: https://n8n-onrender.onrender.com
      - key: N8N_HOST
        value: 0.0.0.0  # Important for Docker container accessibility
      - key: N8N_PORT
        value: "5678"

      # === PostgreSQL DB ===
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_HOST
        fromService:
          name: n8n-postgres
          type: database
          property: connectionString.host
      - key: DB_POSTGRESDB_PORT
        fromService:
          name: n8n-postgres
          type: database
          property: connectionString.port
      - key: DB_POSTGRESDB_DATABASE
        fromService:
          name: n8n-postgres
          type: database
          property: connectionString.database
      - key: DB_POSTGRESDB_USER
        fromService:
          name: n8n-postgres
          type: database
          property: connectionString.user
      - key: DB_POSTGRESDB_PASSWORD
        fromService:
          name: n8n-postgres
          type: database
          property: connectionString.password

      # === Additional Config ===
      - key: N8N_ENCRYPTION_KEY
        sync: false  # Set manually in Render dashboard
      - key: EXECUTIONS_PROCESS
        value: main
      - key: GENERIC_TIMEZONE
        value: UTC

databases:
  - name: n8n-postgres
    databaseName: n8n
    user: n8n

  - name: n8n-redis
    ipAllowList: []  # Allow access from Render services