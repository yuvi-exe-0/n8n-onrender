services: 
  - type: web
    name: n8n
    env: docker
    plan: starter # or standard/pro as needed
    dockerfilePath: ""  # Assumes you have a Dockerfile at root. If not, use `dockerComposeFilePath`
    autoDeploy: true
    healthCheckPath: /
    
    envVars:
      # === Auth and Web UI ===
      - key: N8N_BASIC_AUTH_ACTIVE
        value: "true"
      - key: N8N_BASIC_AUTH_USER
        value: admin
      - key: N8N_BASIC_AUTH_PASSWORD
        value: securepass123

      # === External URL ===
      - key: WEBHOOK_URL
        value: https://n8n-onrender.onrender.com
      - key: N8N_HOST
        value: n8n-onrender
      - key: N8N_PORT
        value: "5678"

      # === PostgreSQL DB ===
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_HOST
        fromService:
          type: pserv
          name: n8n-postgres   # <-- ⚠️ must match database name below
      - key: DB_POSTGRESDB_PORT
        value: "5432"
      - key: DB_POSTGRESDB_DATABASE
        value: n8n
      - key: DB_POSTGRESDB_USER
        value: n8n
      - key: DB_POSTGRESDB_PASSWORD
        sync: false # 👈 Add this manually in Render Dashboard (Secrets tab)

      # === Redis (optional for queues) ===
      - key: QUEUE_MODE
        value: redis
      - key: QUEUE_REDIS_HOST
        fromService:
          type: pserv
          name: n8n-redis
      - key: QUEUE_REDIS_PORT
        value: "6379"

      # === Security ===
      - key: N8N_ENCRYPTION_KEY
        sync: false # 👈 Add this manually in Render Dashboard

      # === Runtime settings ===
      - key: EXECUTIONS_PROCESS
        value: main
      - key: GENERIC_TIMEZONE
        value: UTC

databases:
  - name: n8n-postgres
    databaseName: n8n
    user: n8n

  - name: n8n-redis
    ipAllowList: [] # open to all internal Render services
